name: App

on:
  pull_request:
    paths:
      - '.github/workflows/frontend.yml'
      - 'frontend/**'

    branches:
      - '*'

  push:
    paths:
      - '.github/workflows/frontend.yml'
      - 'frontend/**'

    branches:
      - 'develop'
      - 'master'

jobs:
  build:
    if: github.repository == 'JOWOMO/project-c'
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js 12.x
      uses: actions/setup-node@v1.4.4
      with:
        node-version: 12.x

    - name: Install dependencies
      run: |
        npm install
      working-directory: frontend

    - name: Set env default
      run: |
        echo "STAGE=dev" >> $GITHUB_ENV
        echo "USE_BETA_LOGO=true" >> $GITHUB_ENV
        echo "VERSION_SUFFIX=-dev" >> $GITHUB_ENV

    - name: Set env to test
      if: endsWith(github.ref, '/develop')
      run: |
        echo "STAGE=test" >> $GITHUB_ENV
        echo "USE_BETA_LOGO=true" >> $GITHUB_ENV
        echo "SENTRY_DSN=${{ secrets.SENTRY_DSN }}" >> $GITHUB_ENV
        echo "SENTRY_PUBLISH_RELEASE=true" >> $GITHUB_ENV
        echo "VERSION_SUFFIX=-test" >> $GITHUB_ENV

    - name: Set env to production
      if: endsWith(github.ref, '/master')
      run: |
        echo "STAGE=prod" >> $GITHUB_ENV
        echo "USE_BETA_LOGO=false" >> $GITHUB_ENV
        echo "SENTRY_DSN=${{ secrets.SENTRY_DSN }}" >> $GITHUB_ENV
        echo "SENTRY_PUBLISH_RELEASE=true" >> $GITHUB_ENV
        echo "VERSION_SUFFIX=" >> $GITHUB_ENV

    - uses: tkt-actions/aws-sam-cli@v1
    - name: Export aws config
      run: |
        aws cloudformation describe-stacks --stack-name bee-to-bee-api-${{ STAGE }} --query "Stacks[0].Outputs" > aws.json
        aws ssm get-parameter --name /btb/${{ STAGE }}/cloudfronturl --query Parameter.Value > aws_url.json
      working-directory: frontend
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: "eu-west-1"

    - name: Generate
      run: |
        PACKAGE_VERSION=$(node -p -e "require('./package.json').version.split('.').splice(0,2).join('.')")
        VERSION=$PACKAGE_VERSION.$GITHUB_RUN_NUMBER$VERSION_SUFFIX
        echo $VERSION
        npm version $VERSION
        npx nuxt build
      working-directory: frontend
      env:
        NUXT_GTM_ID: ${{ secrets.GTM_ID }}
        NUXT_ENV_STAGE: ${{ STAGE }}
        USE_BETA_LOGO: ${{ USE_BETA_LOGO }}
        SENTRY_DSN: ${{ SENTRY_DSN }}
        SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
        SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        SENTRY_PUBLISH_RELEASE: ${{ SENTRY_PUBLISH_RELEASE }}
        VERSION_SUFFIX: ${{ VERSION_SUFFIX }}

    - name: Upload artifacts
      uses: actions/upload-artifact@v1
      with:
        name: app
        path: frontend/dist

    - name: Deploy
      run: |
        npx serverless deploy --stage ${{ STAGE }}
        rm -f dist/_nuxt/*.map
        npx serverless client deploy --no-confirm --no-policy-change --stage ${{ STAGE }}
      working-directory: frontend
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
